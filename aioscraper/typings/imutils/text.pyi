"""
This type stub file was generated by pyright.
"""

def put_text(img, text, org, font_face, font_scale, color, thickness=..., line_type=..., bottom_left_origin=...): # -> None:
    """Utility for drawing text with line breaks

    :param img: Image.
    :param text: Text string to be drawn.
    :param org: Bottom-left corner of the first line of the text string in the image.
    :param font_face: Font type. One of FONT_HERSHEY_SIMPLEX, FONT_HERSHEY_PLAIN, FONT_HERSHEY_DUPLEX,
                          FONT_HERSHEY_COMPLEX, FONT_HERSHEY_TRIPLEX, FONT_HERSHEY_COMPLEX_SMALL,
                          FONT_HERSHEY_SCRIPT_SIMPLEX, or FONT_HERSHEY_SCRIPT_COMPLEX, where each of the font ID’s
                          can be combined with FONT_ITALIC to get the slanted letters.
    :param font_scale: Font scale factor that is multiplied by the font-specific base size.
    :param color: Text color.
    :param thickness: Thickness of the lines used to draw a text.
    :param line_type: Line type. See the line for details.
    :param bottom_left_origin: When true, the image data origin is at the bottom-left corner.
                               Otherwise, it is at the top-left corner.
    :return: None; image is modified in place
    """
    ...

def put_centered_text(img, text, font_face, font_scale, color, thickness=..., line_type=...): # -> None:
    """Utility for drawing vertically & horizontally centered text with line breaks

    :param img: Image.
    :param text: Text string to be drawn.
    :param font_face: Font type. One of FONT_HERSHEY_SIMPLEX, FONT_HERSHEY_PLAIN, FONT_HERSHEY_DUPLEX,
                          FONT_HERSHEY_COMPLEX, FONT_HERSHEY_TRIPLEX, FONT_HERSHEY_COMPLEX_SMALL,
                          FONT_HERSHEY_SCRIPT_SIMPLEX, or FONT_HERSHEY_SCRIPT_COMPLEX, where each of the font ID’s
                          can be combined with FONT_ITALIC to get the slanted letters.
    :param font_scale: Font scale factor that is multiplied by the font-specific base size.
    :param color: Text color.
    :param thickness: Thickness of the lines used to draw a text.
    :param line_type: Line type. See the line for details.
    :return: None; image is modified in place
    """
    ...

