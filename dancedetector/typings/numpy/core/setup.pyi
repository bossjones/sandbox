"""
This type stub file was generated by pyright.
"""

from setup_common import *

NPY_RELAXED_STRIDES_CHECKING = ...
NPY_RELAXED_STRIDES_DEBUG = ...
NPY_RELAXED_STRIDES_DEBUG = ...
class CallOnceOnly:
    def __init__(self) -> None:
        ...
    
    def check_types(self, *a, **kw): # -> tuple[list[Unknown], list[Unknown]] | Any:
        ...
    
    def check_ieee_macros(self, *a, **kw): # -> tuple[list[Unknown], list[Unknown]] | Any:
        ...
    
    def check_complex(self, *a, **kw): # -> tuple[list[Unknown], list[Unknown]] | Any:
        ...
    


def pythonlib_dir(): # -> int | str | None:
    """return path where libpython* is."""
    ...

def is_npy_no_signal(): # -> bool:
    """Return True if the NPY_NO_SIGNAL symbol must be defined in configuration
    header."""
    ...

def is_npy_no_smp(): # -> bool:
    """Return True if the NPY_NO_SMP symbol must be defined in public
    header (when SMP support cannot be reliably enabled)."""
    ...

def win32_checks(deflist): # -> None:
    ...

def check_math_capabilities(config, ext, moredefs, mathlibs): # -> None:
    ...

def check_complex(config, mathlibs): # -> tuple[list[Unknown], list[Unknown]]:
    ...

def check_ieee_macros(config): # -> tuple[list[Unknown], list[Unknown]]:
    ...

def check_types(config_cmd, ext, build_dir): # -> tuple[list[Unknown], list[Unknown]]:
    ...

def check_mathlib(config_cmd): # -> list[str]:
    ...

def visibility_define(config): # -> Literal['__attribute__((visibility("hidden")))', '']:
    """Return the define value to use for NPY_VISIBILITY_HIDDEN (may be empty
    string)."""
    ...

def configuration(parent_package=..., top_path=...): # -> Configuration:
    ...

if __name__ == '__main__':
    ...
