# [mypy]
# plugins = pydantic.mypy
# check_untyped_defs = True
# disallow_untyped_calls = True
# follow_imports = silent
# ignore_missing_imports = True
# no_implicit_optional = True
# warn_incomplete_stub = True
# warn_redundant_casts = True
# warn_return_any = True
# warn_unused_configs = True
# warn_unused_ignores = True
# mypy_path = stubs
# # strict_optional is on by default in mypy 0.600, but I don't want to deal with that change yet.
# strict_optional = False
#
# [mypy-.*]
# disallow_untyped_defs = True
#
# [mypy-tests.*]
# # Only specific test files (defined in tox.ini) will be checked, so let's check everything in those.
# check_untyped_defs = True
#
# # [mypy-moonbeam_cli.config_entries]
# # disallow_untyped_defs = false
# #
# # [mypy-moonbeam_cli.util.yaml]
# # warn_return_any = false
# # disallow_untyped_calls = false


################################################
# from fastapi_pytorch_postgres_sandbox
#################################################
[mypy]
# FIXME: TEMPORARY FIX, NEED TO RE-ENABLE AFTER MERGE 10/18/2022
ignore_errors = True
# Shows a warning when returning a value with type Any from a function declared with a non- Any return type.
warn_return_any = False

# exclude = '(contrib|dancedetector*)/$'
exclude = '(contrib*)/$'


# plugins = pydantic.mypy, sqlmypy
# plugins = pydantic.mypy

# Enables or disables strict Optional checks. If False, mypy treats None as compatible with every type.
strict_optional = True
# Warns about casting an expression to its inferred type.
warn_redundant_casts = True
# warn_unused_ignores = True
# Disallows usage of generic types that do not specify explicit type parameters.
disallow_any_generics = False
# Type-checks the interior of functions without type annotations.
check_untyped_defs = False

# Disallows defining functions without type annotations or with incomplete type annotations.
disallow_untyped_defs = False
# Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True

# Prefixes each error with the relevant context.
show_error_context = True

# Shows column numbers in error messages.
show_column_numbers = True

# Shows traceback on fatal error.
show_traceback = True

# Use visually nicer output in error messages: use soft word wrap, show source code snippets, and show error location markers.
pretty = True

[mypy-loguru]
ignore_missing_imports = True

[mypy-aiofiles]
ignore_missing_imports = True

[mypy-passlib.*]
ignore_missing_imports = True

[mypy-redis.asyncio.*]
ignore_missing_imports = True

[mypy-httpx.*]
# TODO: Fix this, but using it like so for the moment
# https://github.com/encode/httpx/blob/master/setup.cfg
disallow_untyped_defs = True
ignore_missing_imports = True

# [mypy-dancedetector.*]
# # TODO: Fix this, but using it like so for the moment
# # https://github.com/encode/httpx/blob/master/setup.cfg
# # https://mypy.readthedocs.io/en/stable/config_file.html?# highlight=mypy%20ini#config-file-format
# disallow_untyped_defs = True
# ignore_missing_imports = True
# allow_redefinition=True
# ignore_errors = True


# no_redef
# no_untyped_def
# type_arg
# union_attr
# var_annotated
